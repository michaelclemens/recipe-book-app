// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Recipe {
  id          String       @id @default(cuid())
  name        String
  summary     String?
  imageSrc    String?
  prepTime    Int?
  cookTime    Int?
  serves      Int?
  ingredients Ingredient[]
  methods     Method[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  lists       List[]
}

model Ingredient {
  id          String   @id @default(cuid())
  recipe      Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId    String
  name        String
  quantity    Float?
  unit        String?
  preparation String?
  optional    Boolean?
  order       Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Method {
  id        String   @id @default(cuid())
  recipe    Recipe   @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  recipeId  String
  step      String
  stepTime  Int?
  order     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model List {
  id        String   @id @default(cuid())
  name      String
  recipes   Recipe[]
  items     Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Item {
  id        String   @id @default(cuid())
  list      List     @relation(fields: [listId], references: [id], onDelete: Cascade)
  listId    String
  name      String
  quantity  Float?
  unit      String?
  order     Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
